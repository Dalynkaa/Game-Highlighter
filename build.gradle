plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url "https://maven.shedaniel.me/" }
	maven { url 'https://maven.wispforest.io' }
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
	mavenCentral()

	// Dev only
	maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
}

loom {
    splitEnvironmentSourceSets()

	mods {
		"gamehighlighter" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	implementation 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modApi "com.terraformersmc:modmenu:${project.mod_menu_version}"
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modImplementation include("io.github.cottonmc:LibGui:8.0.2+1.20")

	// owo lib
	modImplementation "io.wispforest:owo-lib:${project.owo_version}"
	annotationProcessor "io.wispforest:owo-lib:${project.owo_version}"
	include "io.wispforest:owo-lib:${project.owo_version}"

	// Dev only
	modRuntimeOnly("me.djtheredstoner:DevAuth-fabric:${dev_auth}")
}

processResources {
	inputs.property "version", project.version
	inputs.property "minecraft_version", project.minecraft_version
	inputs.property "loader_version", project.loader_version
	inputs.property "cloth_config_version", project.cloth_config_version
	inputs.property "mod_menu_version", project.mod_menu_version
	inputs.property "owo_version", project.owo_version
	filteringCharset "UTF-8"

	filesMatching("fabric.mod.json") {
		expand "version": project.version,
				"minecraft_version": project.minecraft_version,
				"loader_version": project.loader_version,
				"cloth_config_version": project.cloth_config_version,
				"mod_menu_version": project.mod_menu_version,
				"owo_version": project.owo_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}